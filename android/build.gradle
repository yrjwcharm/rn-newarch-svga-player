import java.nio.file.Paths
buildscript {
     ext.safeExtGet = {prop ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : project.properties['SvgaPlayer_' + prop]
    }
  repositories {
    // 使用阿里云镜像源
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    // 备用官方源
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.0.4"
    // noinspection DifferentKotlinGradleVersion
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion')}")

  }
}


apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "com.facebook.react"

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["SvgaPlayer_" + name]).toInteger()
}
static def findNodeModulePath(baseDir, packageName) {
    def basePath = baseDir.toPath().normalize()
    while (basePath) {
        def candidatePath = Paths.get(basePath.toString(), "node_modules", packageName)
        if (candidatePath.toFile().exists()) {
            return candidatePath.toString()
        }
        basePath = basePath.getParent()
    }
    return null
}

android {
  namespace "com.svgaplayer"

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
  }
}
def reactNativePath = findNodeModulePath(projectDir, "react-native")

repositories {
   maven {
        url "${reactNativePath}/android"
    }
    mavenCentral()
    google()
}

dependencies {
  implementation "com.facebook.react:react-android"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:${safeExtGet('kotlinVersion')}"
  implementation "com.github.yyued:SVGAPlayer-Android:2.6.1"
}
